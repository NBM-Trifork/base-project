{
    "pipes": [],
    "interfaces": [
        {
            "name": "Contact",
            "id": "interface-Contact-77072ce8e0b68c72ae3d07d4dcf4d882404a8947fe6867f4426d920cb43c82b81d6c11c0ff1e866b5e3a9414353d4570c281bd4fe71596496adb6e2f2c90a026",
            "file": "src/app/shared/models/Contact.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Contact {\n    name?: string,\n    email: string,\n    phoneNumber?: number;\n    message?: string,\n    privacy: boolean\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "phoneNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "privacy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-5243eb30371b1b8651d35fe87fdca701e01115f8c694531c296c4e3a54b174fc457ff4997f4a82fc2f216c32447b2a8c56aa6c69ea6547d9b3f91613a2a3c39f",
            "file": "src/app/shared/models/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n    name: string\n}",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0023012fe875717a39fd6a81eb76df92d366cebabeacad73a7bb4c6c567da6220dc1a721c6a135eb8a8e0929cfad2c4082a160db6ebe8747bb977b77ab1ab8f7",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- <app-gsap-introduction></app-gsap-introduction> -->\n<app-registration-form></app-registration-form>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-af7d8806e23dd0db5a60e972503c7cdf9a4557f5782a007dd38f5630ec96712adf0bac8a3fcff1ea1236d0b99004a617798652eadd02b6fc29aeb6fe4f33e612",
            "file": "src/app/shared/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "clickAction",
                    "defaultValue": "()=> console.log(\"clicked\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "() => any",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "\"press\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"small\" | \"medium\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() label: string = \"press\";\n  @Input()\n  primary: boolean = false;\n  @Input()\n  size: 'small' | 'medium' = 'medium';\n  @Input() clickAction = ()=> console.log(\"clicked\");\n  @Output() clickEvent: EventEmitter<any>= new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public onClick(event: any){\n    this.clickAction();\n    this.clickEvent.emit(event);\n  }\n\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'button--primary' : 'button--secondary';\n\n    return ['button', `button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".button {\n    font-family: Poppins-SemiBold;\n    font-style: normal;\n    text-transform: uppercase;\n    border: 3px solid var(--primary-orange) !important;\n    border-radius: 100pc;\n    cursor: pointer;\n    display: inline-block;\n  }\n  .button:focus{\n    outline: none;\n  }\n\n  .button--primary {\n    color: var(--primary-orange);\n    background-color: var(--white);\n    border: 3px solid var(--primary-orange) !important;\n  }\n  .button--primary:hover {\n    color: var(--white);\n    background-color: var(--primary-orange);\n  }\n  \n  .button--secondary {\n    color: var(--primary-dark);\n    background-color: var(--white);\n    border: 1px solid var(--dark-40) !important;\n  }\n  .button--secondary:hover {\n    color: var(--white);\n    background-color: var(--primary-orange);\n  }\n\n  .button--small {\n    font-size: 12px;\n    line-height: 18px;\n    padding: 6px 24px;\n  }\n  .button--medium {\n    border: 3px;\n    padding: 12px 32px;\n    font-size: 14px;\n    line-height: 21px;\n  }\n\n  ",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 27
                    }
                }
            },
            "templateData": "<button (click)=\"onClick($event)\" [ngClass]=\"classes\">{{ label }}</button>\n"
        },
        {
            "name": "GsapIntroductionComponent",
            "id": "component-GsapIntroductionComponent-8f638ff58eb68899dadf76e7bb0cdb7cc755517f6d9849508184a137d5335da403c0684967eac1445963a7f5d79db838ad48704a9d349eaa33309501fc848d45",
            "file": "src/app/modules/gsap-introduction/gsap-introduction.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-gsap-introduction",
            "styleUrls": [
                "./gsap-introduction.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gsap-introduction.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "boxEase",
                    "defaultValue": "'elastic.out(1, 0.3)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "\"back.out(1.7)\" | \"Circ.easeOut\" | \"elastic.out(1, 0.3)\"",
                    "decorators": []
                },
                {
                    "name": "cookieEase",
                    "defaultValue": "'back.out(1.7)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"back.out(1.7)\" | \"Circ.easeOut\" | \"elastic.out(1, 0.3)\"",
                    "decorators": []
                },
                {
                    "name": "panelEase",
                    "defaultValue": "'Circ.easeOut'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"back.out(1.7)\" | \"Circ.easeOut\" | \"elastic.out(1, 0.3)\"",
                    "decorators": []
                },
                {
                    "name": "section3Ease",
                    "defaultValue": "'elastic.out(1, 0.3)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"back.out(1.7)\" | \"Circ.easeOut\" | \"elastic.out(1, 0.3)\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'gsap introduction'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "animationOnScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clickButton",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clickButton2",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input, OnInit } from '@angular/core';\nimport ScrollTrigger from 'gsap/ScrollTrigger';\n\nimport { gsap } from 'gsap';\n\ngsap.registerPlugin(ScrollTrigger);\n\n@Component({\n  selector: 'app-gsap-introduction',\n  templateUrl: './gsap-introduction.component.html',\n  styleUrls: ['./gsap-introduction.component.scss'],\n})\nexport class GsapIntroductionComponent implements OnInit {\n  public title = 'gsap introduction';\n  @Input() panelEase: 'back.out(1.7)' | 'Circ.easeOut' | 'elastic.out(1, 0.3)' =\n    'Circ.easeOut';\n  @Input() cookieEase:\n    | 'back.out(1.7)'\n    | 'Circ.easeOut'\n    | 'elastic.out(1, 0.3)' = 'back.out(1.7)';\n    @Input() section3Ease:\n    | 'back.out(1.7)'\n    | 'Circ.easeOut'\n    | 'elastic.out(1, 0.3)' = 'elastic.out(1, 0.3)';\n  @Input() boxEase: 'back.out(1.7)' | 'Circ.easeOut' | 'elastic.out(1, 0.3)' =\n    'elastic.out(1, 0.3)';\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  ngOnInit() {\n    console.log('ScrollTrigger', ScrollTrigger);\n    this.animationOnScroll();\n  }\n  public clickButton2(event: any){\n    gsap.fromTo(\"#ctaAnimation\",{y: 60}, {y: 0, duration: 3, ease: this.section3Ease});\n  }\n\n  public clickButton(event: any) {\n    gsap.to('.panel', {\n      duration: 1.5,\n      scaleY: 1,\n      height: '100vh',\n      ease: this.panelEase,\n    });\n    gsap.to('#cookie', {\n      duration: 1,\n      opacity: 1,\n      y: 0,\n      delay: 1,\n      ease: this.cookieEase,\n    });\n    gsap.to('.firstP', {\n      duration: 1,\n      opacity: 1,\n      y: 20,\n      delay: 1.4,\n    });\n    gsap.to('.box', { duration: 4, scale: 1, opacity: 1, ease: this.boxEase });\n  }\n\n  animationOnScroll() {\n    gsap.to('.section2', {\n      scrollTrigger: {\n        trigger: '.section2',\n        scrub: true,\n        pin: true,\n        start: 'top top',\n        end: '+=500',\n        toggleClass: 'active',\n      },\n      duration: 1,\n      opacity: 1,\n      ease: 'power2',\n    });\n    gsap.to('.image1', {\n      scrollTrigger: {\n        trigger: '.section2',\n        scrub: true,\n        start: 'top bottom',\n        end: 'bottom -300',\n      },\n      duration: 1,\n      ease: this.panelEase,\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".flex {\n    width: 100%;\n    min-height: 100vh;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    justify-content: center;\n    align-items: center;\n}\n.header {\n  padding: 30px;\n  text-transform: uppercase;\n  text-align: left;\n}\n\n.section {\n  border-top: 1px solid var(--dark-40);\n  border-bottom: 1px solid var(--dark-40);\n  padding: 30px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n}\n\n.panel {\n    position: absolute;\n    width: 55%;\n    bottom: 0;\n    right: 0;\n    background-color: var(--secondary-orange-dark);\n    box-sizing: border-box; \n    text-align: left;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    grid-template-columns: min-content auto;\n    transform: scaleY(0);\n    transform-origin: bottom;\n}\n\n.image0 {\n  width: 120px;\n  float: left;\n  margin-right: 50px;\n  opacity: 0;\n  transform: translateY(-200px);\n}\n\n.image0 {\n    float: left;\n    margin-right: 50px;\n    transform: translateY(-500px);\n  }\n\n\n.firstP {\n    line-height: 30px;\n    width: 60%;\n    opacity: 0;\n}\n\n.box {\n    border: 5px solid var(--secondary-orange);\n    width: 65%;\n    height: 40%;\n    position: absolute;\n    left: -7%;\n    z-index: -1;\n    opacity: 0;\n    transform: scale(0);\n}\n\n.section2 {\n    background-color: var(--secondary-green);\n    padding: 30px;\n}\n\n.section2-text{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: left;\n    height: 100%;\n    padding: 30px;\n}\n\n.image1 {\n    left: -7%;\n    // transform: translateY(-100px);\n}",
                    "styleUrl": "./gsap-introduction.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"flex\">\n  <header #header class=\"header\">\n    <h1>{{ title }}</h1>\n    <app-button\n      label=\"Watch here\"\n      [primary]=\"true\"\n      id=\"cta\"\n      (clickEvent)=\"clickButton($event)\"\n    ></app-button>\n  </header>\n\n  <section #firstSection class=\"panel\">\n    <img class=\"image0\" id=\"cookie\" src=\"../../../assets/images/cookie.svg\" />\n    <p class=\"firstP\">\n      GSAP is nice for making smart animation to your projects.\n    </p>\n    <div class=\"box\"></div>\n  </section>\n</div>\n\n<div class=\"flex section2\">\n  <div class=\"section2-text\">\n    <div class=\"subtitle\">Static subtitle</div>\n    <p>LET this text be static on scroll</p>\n  </div>\n\n  <section class=\"panel2\">\n    <img class=\"image1\" src=\"../../../assets/images/cookie.svg\" />\n    <img class=\"image2\" src=\"../../../assets/images/cookie.svg\" />\n    <!-- <img class=\"image1\" src=\"../../../assets/images/cookie.svg\" /> -->\n  </section>\n</div>\n\n<div class=\"flex\" style=\"background-color: var(--secondary-orange); padding: 20px;\">\n  <app-button\n      label=\"Watch here\"\n      [primary]=\"true\"\n      id=\"ctaAnimation\"\n      (clickEvent)=\"clickButton2($event)\"\n    ></app-button>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-66204762b2794d4e6bdb2cfb598c3da78ca68998292c7d45047798940e558adcb262ec04e928ae9f19d1ba8435858411d1350ad4b36c2f552beaef74abb74eed",
            "file": "src/app/shared/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "\"Trifork\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { User } from 'src/app/shared/models/User';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Input()\n  user: User | null = null;\n  \n  @Input()\n  backgroundColor?: string;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n\n  public title = \"Trifork\";\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: Poppins-SemiBold;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.logo {\n  width: 10px;\n  height: 10px;\n  background-color: var(--primary-orange);\n  content: \"\";\n}\n\n.margin-left {\n  margin-left: 10px;\n}\n\n.welcome {\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<header>\n  <div class=\"wrapper\" [ngStyle]=\"{ 'background-color': backgroundColor }\">\n    <span  class=\"logo\"> {{title}} </span>\n\n    <div class=\"subtitle\">Angular components</div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user?.name }}</b\n          >!\n        </span>\n\n        <app-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></app-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <app-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></app-button>\n        <app-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></app-button>\n      </div>\n    </div>\n  </div>\n</header>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-98b97646fbcfb7fc01f21e0202dfc192fca32a3152fce35914eb6d6b7ca1d730e4e992071fa1c8c2bc302881ce2f7e5f245f7f8e0893be5e18ba3f59fd131762",
            "file": "src/app/modules/page/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page",
            "styleUrls": [
                "./page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\nimport { User } from '../../shared/models/User';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.scss'],\n})\nexport class PageComponent implements OnInit {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-size: 14px;\n    line-height: 24px;\n    padding: 48px 20px;\n    margin: 0 auto;\n    max-width: 600px;\n    color: #333;\n  }\n  \n  section h2 {\n    font-weight: 900;\n    font-size: 32px;\n    line-height: 1;\n    margin: 0 0 4px;\n    display: inline-block;\n    vertical-align: top;\n  }\n  \n  section p {\n    margin: 1em 0;\n  }\n  \n  section a {\n    text-decoration: none;\n    color: #1ea7fd;\n  }\n  \n  section ul {\n    padding-left: 30px;\n    margin: 1em 0;\n  }\n  \n  section li {\n    margin-bottom: 8px;\n  }\n  \n  section .tip {\n    display: inline-block;\n    border-radius: 1em;\n    font-size: 11px;\n    line-height: 12px;\n    font-weight: 700;\n    background: #e7fdd8;\n    color: #66bf3c;\n    padding: 4px 12px;\n    margin-right: 10px;\n    vertical-align: top;\n  }\n  \n  section .tip-wrapper {\n    font-size: 13px;\n    line-height: 20px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n  }\n  \n  section .tip-wrapper svg {\n    display: inline-block;\n    height: 12px;\n    width: 12px;\n    margin-right: 4px;\n    vertical-align: top;\n    margin-top: 3px;\n  }\n  \n  section .tip-wrapper svg path {\n    fill: #1ea7fd;\n  }\n  ",
                    "styleUrl": "./page.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<article>\n    <app-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></app-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>"
        },
        {
            "name": "RegistrationFormComponent",
            "id": "component-RegistrationFormComponent-0a512db7c3892ddb5dadc6c552318e7fb514f5cd82eb77b64f450d35e547969aa23980d07e4931c04f22388f5ba03dcb8482df236cece862495249abb10c4487",
            "file": "src/app/shared/registration-form/registration-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration-form",
            "styleUrls": [
                "./registration-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./registration-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "onSubmit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "() => () => void",
                    "decorators": []
                },
                {
                    "name": "registration",
                    "defaultValue": "new FormGroup({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submitForm",
                    "defaultValue": "new EventEmitter<Contact>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "() => void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "Input",
                            "stringifiedArguments": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Form, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Contact } from '../models/Contact';\n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.scss'],\n})\nexport class RegistrationFormComponent implements OnInit {\n  @Input() registration = new FormGroup({});\n  @Output() submitForm = new EventEmitter<Contact>();\n  ngOnInit(): void {\n    this.initForm();\n  }\n  initForm() {\n    this.registration = new FormGroup({\n      name: new FormControl(''),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      phoneNumber: new FormControl(''),\n      message: new FormControl(''),\n      privacy: new FormControl(false, Validators.requiredTrue),\n    });\n  }\n  @Input() onSubmit() {\n    return () => {\n      if (this.registration.valid) {\n        var contact: Contact =\n          (this.registration.value.name,\n          this.registration.value.email,\n          this.registration.value.phoneNumber,\n          this.registration.value.message,\n          this.registration.value.privacy);\n        this.submitForm.emit(contact);\n        alert('Success');\n      }\n      alert('Error');\n    };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".registrationForm {\n    background-color: var(--white);\n    box-shadow: 0px 4px 16px rgb(0 0 0 / 12%);\n    border-radius: 20px;\n    width: 750px;\n}\n\n.formfield {\n    padding: 32px;\n    min-height: 72px;\n    display: flex;\n    flex-direction: column;\n}\n\n.formfield--middle{\n    border-top: 1px solid var(--dark-40)!important;\n}\n\n.row {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: top;\n    padding: 32px;\n}\n\n.checkbox {\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n}\n\n.alert\n{\n    color:red\n}\n",
                    "styleUrl": "./registration-form.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form\n  [formGroup]=\"registration\"\n  class=\"registrationForm\"\n  id=\"registrationForm\"\n>\n  <div class=\"formfield\">\n    <label for=\"name\">Name</label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\" />\n  </div>\n  <div class=\"formfield formfield--middle\">\n    <label for=\"email\">Email</label>\n    <input id=\"email\" type=\"email\" formControlName=\"email\" />\n    <div\n    *ngIf=\"\n      registration.controls['email']?.invalid &&\n      registration.controls['email']?.dirty\n    \"\n    class=\"alert\"\n  >\n    <div *ngIf=\"registration.controls['email']?.errors?.['required']\">\n      Please enter email\n    </div>\n    <div *ngIf=\"registration.controls['email']?.errors?.['email']\">\n      Please enter valid email\n    </div>\n  </div>\n  </div>\n  \n  <div class=\"formfield formfield--middle\">\n    <label for=\"phoneNumber\">Phone Number</label>\n    <input id=\"phoneNumber\" type=\"tel\" formControlName=\"phoneNumber\" />\n  </div>\n  <div class=\"formfield formfield--middle\">\n    <label for=\"message\">Message</label>\n    <input id=\"message\" type=\"textarea\" formControlName=\"message\" />\n  </div>\n  <div class=\"row\">\n    <div class=\"checkbox\">\n      <input id=\"privacy\" type=\"checkbox\" formControlName=\"privacy\" />\n      <label for=\"privacy\">I agree to the privacy policy</label>\n    </div>\n    <app-button\n      size=\"medium\"\n      [primary]=\"true\"\n      [clickAction]=\"onSubmit()\"\n      label=\"Submit\"\n    ></app-button>\n  </div>\n</form>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-f020a3edc75587c6917df1f7f423bd1f3f7f1e2c60b6d5f4f6a8de859d1f3495531742bcf731fab5675daaaec8920b8a5b01f30e37cf06c62ecd6e815ac0a968",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ButtonComponent } from './shared/components/button/button.component';\nimport { GsapIntroductionComponent } from './modules/gsap-introduction/gsap-introduction.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { NgModule } from '@angular/core';\nimport { PageComponent } from './modules/page/page.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RegistrationFormComponent } from './shared/registration-form/registration-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n    HeaderComponent,\n    PageComponent,\n    RegistrationFormComponent,\n    GsapIntroductionComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n  ],\n  exports: [ButtonComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "GsapIntroductionComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "PageComponent"
                        },
                        {
                            "name": "RegistrationFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "FilledForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/registration-form/registration-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "gsap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/gsap-introduction/gsap-introduction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InvalidFilledForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/registration-form/registration-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/page/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/header/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/page/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/header/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/gsap-introduction/gsap-introduction.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<GsapIntroductionComponent>",
                "defaultValue": "(\n  args: GsapIntroductionComponent\n) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/page/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PageComponent>",
                "defaultValue": "(args: PageComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/registration-form/registration-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RegistrationFormComponent>",
                "defaultValue": "(args: RegistrationFormComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/header/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/app/shared/registration-form/registration-form.stories.ts": [
                {
                    "name": "FilledForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/registration-form/registration-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InvalidFilledForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/registration-form/registration-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/registration-form/registration-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RegistrationFormComponent>",
                    "defaultValue": "(args: RegistrationFormComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/modules/gsap-introduction/gsap-introduction.stories.ts": [
                {
                    "name": "gsap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/gsap-introduction/gsap-introduction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/gsap-introduction/gsap-introduction.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<GsapIntroductionComponent>",
                    "defaultValue": "(\n  args: GsapIntroductionComponent\n) => ({\n  props: args,\n})"
                }
            ],
            "src/app/modules/page/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/page/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/page/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/page/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PageComponent>",
                    "defaultValue": "(args: PageComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/header/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/header/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/header/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/header/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/components/button/button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/gsap-introduction/gsap-introduction.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GsapIntroductionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/gsap-introduction/gsap-introduction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gsap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/gsap-introduction/gsap-introduction.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/page/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/page/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/page/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/page/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/Contact.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Contact",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/registration-form/registration-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FilledForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InvalidFilledForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/registration-form/registration-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}